{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","setSelectedTodo","selectedFilter","selectedQuery","selectedTodo","className","filterProp","todosList","filter","todo","completed","title","includes","toLowerCase","filterList","map","classNames","id","type","onClick","userId","TodoFilter","setSelectedFilter","setSelectedQuery","onChange","e","target","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","userInfo","setUserInfo","useEffect","targetUser","href","email","name","App","useState","setTodosList","allTodos","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d06b8602.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  setSelectedTodo: React.Dispatch<React.SetStateAction<null | Todo>>;\n  selectedFilter: string;\n  selectedQuery: string;\n  selectedTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setSelectedTodo,\n  selectedFilter,\n  selectedQuery,\n  selectedTodo,\n}) => {\n  const filterList = (filterProp: string, todosList: Todo[]) => {\n    switch (filterProp) {\n      case 'all':\n        return todosList.filter(todo => (todo.completed || !todo.completed)\n          && todo.title.includes(selectedQuery.toLowerCase()));\n\n      case 'completed':\n        return todosList.filter(todo => todo.completed\n          && todo.title.includes(selectedQuery.toLowerCase()));\n\n      case 'active':\n        return todosList.filter(todo => !todo.completed\n          && todo.title.includes(selectedQuery.toLowerCase()));\n\n      default:\n        return todosList;\n    }\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {filterList(selectedFilter, todos).map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light': selectedTodo?.id === todo.id,\n            })}\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames({\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                })}\n              >\n                {todo.title}\n              </p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  setSelectedTodo(todo);\n                }}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={classNames('far fa-eye', {\n                      'fa-eye-slash': selectedTodo?.userId === todo.userId,\n                    })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  setSelectedFilter: React.Dispatch<React.SetStateAction<string>>;\n  setSelectedQuery: React.Dispatch<React.SetStateAction<string>>;\n  selectedQuery: string;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setSelectedFilter,\n  setSelectedQuery,\n  selectedQuery,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={e => setSelectedFilter(e.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={selectedQuery}\n        onChange={e => setSelectedQuery(e.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {selectedQuery && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setSelectedQuery('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect } from 'react';\nimport classNames from 'classnames';\n\nimport { Loader } from '../Loader';\n\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\n\ntype Props = {\n  userInfo: User | null;\n  setUserInfo: React.Dispatch<React.SetStateAction<User | null>>;\n  selectedTodo: Todo | null;\n  setSelectedTodo: React.Dispatch<React.SetStateAction<Todo | null>>;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  userInfo,\n  setUserInfo,\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  useEffect(() => {\n    if (selectedTodo?.userId) {\n      getUser(selectedTodo.userId).then(targetUser => setUserInfo(targetUser));\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!userInfo || !selectedTodo ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setSelectedTodo(null);\n                setUserInfo(null);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong\n                className={classNames({\n                  'has-text-danger': !selectedTodo.completed,\n                  'has-text-success': selectedTodo.completed,\n                })}\n              >\n                {selectedTodo.completed\n                  ? 'Done'\n                  : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${userInfo.email}`}>\n                {userInfo.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\n\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nexport const App: React.FC = () => {\n  const [todos, setTodosList] = useState<Todo[] | []>([]);\n  // const [selectedUserId, setSelectedUser] = useState(0);\n  const [userInfo, setUserInfo] = useState<User | null>(null);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [selectedFilter, setSelectedFilter] = useState('all');\n  const [selectedQuery, setSelectedQuery] = useState('');\n\n  useEffect(() => {\n    getTodos().then(allTodos => setTodosList(allTodos));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setSelectedFilter={setSelectedFilter}\n                setSelectedQuery={setSelectedQuery}\n                selectedQuery={selectedQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={todos}\n                    selectedTodo={selectedTodo}\n                    setSelectedTodo={setSelectedTodo}\n                    selectedFilter={selectedFilter}\n                    selectedQuery={selectedQuery}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo?.userId && (\n        <TodoModal\n          userInfo={userInfo}\n          setUserInfo={setUserInfo}\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}