{"version":3,"sources":["types/Filter.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","TodoItem","todo","selectedTodo","setSelectedTodo","className","classNames","id","completed","title","type","onClick","userId","TodoList","todos","selectedFilter","selectedQuery","filterProp","todosList","filter","includes","toLowerCase","filterList","map","TodoFilter","setSelectedFilter","setSelectedQuery","onChange","e","filterValue","all","active","handleFilterChange","target","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","userInfo","setUserInfo","useEffect","href","email","name","App","useState","setTodos","length","ReactDOM","render","document","getElementById"],"mappings":"iLAAYA,E,mECWCC,EAA4B,SAAC,GAAD,IACvCC,EADuC,EACvCA,KACAC,EAFuC,EAEvCA,aACAC,EAHuC,EAGvCA,gBAHuC,OAKvC,qBACE,UAAQ,OACRC,UAAWC,IAAW,CACpB,6BAAyC,OAAZH,QAAY,IAAZA,OAAA,EAAAA,EAAcI,MAAOL,EAAKK,KAH3D,UAOE,oBAAIF,UAAU,eAAd,SAA8BH,EAAKK,KACnC,oBAAIF,UAAU,eAAd,SACGH,EAAKM,WACJ,sBAAMH,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAKnB,oBAAIA,UAAU,2BAAd,SACE,mBACEA,UAAWC,IAAW,CACpB,mBAAoBJ,EAAKM,UACzB,mBAAoBN,EAAKM,YAH7B,SAMGN,EAAKO,UAIV,oBAAIJ,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVK,KAAK,SACLC,QAAS,WACPP,EAAgBF,IALpB,SAQE,sBAAMG,UAAU,OAAhB,SACE,mBACEA,UAAWC,IAAW,aAAc,CAClC,gBAA4B,OAAZH,QAAY,IAAZA,OAAA,EAAAA,EAAcS,UAAWV,EAAKU,mBAlCnDV,EAAKK,KCRDM,EAA4B,SAAC,GAMnC,IALLC,EAKI,EALJA,MACAV,EAII,EAJJA,gBACAW,EAGI,EAHJA,eACAC,EAEI,EAFJA,cACAb,EACI,EADJA,aAqBA,OACE,wBAAOE,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCAlCe,SAACY,EAAoBC,GACtC,OAAQD,GACN,IAAK,MACH,OAAOC,EAAUC,QAAO,SAAAjB,GAAI,OAAKA,EAAKM,YAAcN,EAAKM,YACpDN,EAAKO,MAAMW,SAASJ,EAAcK,kBAEzC,IAAK,YACH,OAAOH,EAAUC,QAAO,SAAAjB,GAAI,OAAIA,EAAKM,WAChCN,EAAKO,MAAMW,SAASJ,EAAcK,kBAEzC,IAAK,SACH,OAAOH,EAAUC,QAAO,SAAAjB,GAAI,OAAKA,EAAKM,WACjCN,EAAKO,MAAMW,SAASJ,EAAcK,kBAEzC,QACE,OAAOH,GAoBNI,CAAWP,EAAgBD,GAAOS,KAAI,SAAArB,GAAI,OACzC,cAAC,EAAD,CACEA,KAAMA,EACNC,aAAcA,EACdC,gBAAiBA,c,SF3DjBJ,K,UAAAA,E,gBAAAA,E,uBAAAA,M,KGUL,IAAMwB,EAA8B,SAAC,GAIrC,IAHLC,EAGI,EAHJA,kBACAC,EAEI,EAFJA,iBACAV,EACI,EADJA,cAqBA,OACE,uBAAMX,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRsB,SAAU,SAAAC,GAAC,OAzBM,SAACC,GAC1B,OAAQA,GACN,IAAK,MACHJ,EAAkBzB,EAAO8B,KACzB,MAEF,IAAK,SACHL,EAAkBzB,EAAO+B,QACzB,MAEF,IAAK,YACHN,EAAkBzB,EAAOQ,YAcNwB,CAAmBJ,EAAEK,OAAOC,QAF7C,UAIE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,8BAKN,oBAAG7B,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRK,KAAK,OACLL,UAAU,QACV8B,YAAY,YACZD,MAAOlB,EACPW,SAAU,SAAAC,GAAC,OAAIF,EAAiBE,EAAEK,OAAOC,UAE3C,sBAAM7B,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGdW,GACC,sBAAMX,UAAU,gBAAgB+B,MAAO,CAAEC,cAAe,OAAxD,SAEE,wBACE,UAAQ,oBACR3B,KAAK,SACLL,UAAU,SACVM,QAAS,kBAAMe,EAAiB,gBClEjCY,G,MAAmB,kBAC9B,qBAAKjC,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCOnB,SAASkC,EAAOC,GAEd,IARYC,EAQNC,EAVS,iEAUYF,EAAM,QAEjC,OAVYC,EAUA,IATL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OASnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,ICLMC,EAA6B,SAAC,GAKpC,IAJLC,EAII,EAJJA,SACAC,EAGI,EAHJA,YACAjD,EAEI,EAFJA,aACAC,EACI,EADJA,gBAQA,OANAiD,qBAAU,WDCW,IAACzC,ECApB,OAAIT,QAAJ,IAAIA,KAAcS,SDAEA,ECCVT,EAAaS,ODDgB2B,EAAG,iBAAiB3B,KCC5BkC,KAAKM,KAEnC,IAGD,sBAAK/C,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEb8C,GAAahD,EAGb,sBAAKE,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIYF,EAAaI,MAIzB,wBACEG,KAAK,SACLL,UAAU,SACV,UAAQ,cACRM,QAAS,WACPP,EAAgB,MAChBgD,EAAY,YAKlB,sBAAK/C,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACGF,EAAaM,QAGhB,oBAAGJ,UAAU,QAAQ,UAAQ,aAA7B,UAEE,wBACEA,UAAWC,IAAW,CACpB,mBAAoBH,EAAaK,UACjC,mBAAoBL,EAAaK,YAHrC,SAMGL,EAAaK,UACV,OACA,YAGL,OAED,mBAAG8C,KAAI,iBAAYH,EAASI,OAA5B,SACGJ,EAASK,gBA5ClB,cAAC,EAAD,QClBKC,EAAgB,WAC3B,MAA0BC,mBAAsB,IAAhD,mBAAO5C,EAAP,KAAc6C,EAAd,KACA,EAAgCD,mBAAsB,MAAtD,mBAAOP,EAAP,KAAiBC,EAAjB,KACA,EAAwCM,mBAAsB,MAA9D,mBAAOvD,EAAP,KAAqBC,EAArB,KACA,EAA4CsD,mBAAiB1D,EAAO8B,KAApE,mBAAOf,EAAP,KAAuBU,EAAvB,KACA,EAA0CiC,mBAAS,IAAnD,mBAAO1C,EAAP,KAAsBU,EAAtB,KAMA,OAJA2B,qBAAU,WFDkBd,EAAY,UEE3BO,KAAKa,KACf,IAGD,qCACE,qBAAKtD,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CACEoB,kBAAmBA,EACnBC,iBAAkBA,EAClBV,cAAeA,MAInB,qBAAKX,UAAU,QAAf,SACoB,IAAjBS,EAAM8C,OACH,cAAC,EAAD,IAEA,cAAC,EAAD,CACE9C,MAAOA,EACPX,aAAcA,EACdC,gBAAiBA,EACjBW,eAAgBA,EAChBC,cAAeA,cAQhB,OAAZb,QAAY,IAAZA,OAAA,EAAAA,EAAcS,SACb,cAAC,EAAD,CACEuC,SAAUA,EACVC,YAAaA,EACbjD,aAAcA,EACdC,gBAAiBA,QC5D3ByD,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.70e83f1d.chunk.js","sourcesContent":["export enum Filter {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n  selectedTodo: Todo | null,\n  setSelectedTodo: React.Dispatch<React.SetStateAction<Todo | null>>,\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  selectedTodo,\n  setSelectedTodo,\n}) => (\n  <tr\n    data-cy=\"todo\"\n    className={classNames({\n      'has-background-info-light': selectedTodo?.id === todo.id,\n    })}\n    key={todo.id}\n  >\n    <td className=\"is-vcentered\">{todo.id}</td>\n    <td className=\"is-vcentered\">\n      {todo.completed && (\n        <span className=\"icon\">\n          <i className=\"fas fa-check\" />\n        </span>\n      )}\n    </td>\n\n    <td className=\"is-vcentered is-expanded\">\n      <p\n        className={classNames({\n          'has-text-danger': !todo.completed,\n          'has-text-success': todo.completed,\n        })}\n      >\n        {todo.title}\n      </p>\n    </td>\n\n    <td className=\"has-text-right is-vcentered\">\n      <button\n        data-cy=\"selectButton\"\n        className=\"button\"\n        type=\"button\"\n        onClick={() => {\n          setSelectedTodo(todo);\n        }}\n      >\n        <span className=\"icon\">\n          <i\n            className={classNames('far fa-eye', {\n              'fa-eye-slash': selectedTodo?.userId === todo.userId,\n            })}\n          />\n        </span>\n      </button>\n    </td>\n  </tr>\n);\n","import React from 'react';\n\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\n\ntype Props = {\n  todos: Todo[];\n  setSelectedTodo: React.Dispatch<React.SetStateAction<null | Todo>>;\n  selectedFilter: string;\n  selectedQuery: string;\n  selectedTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setSelectedTodo,\n  selectedFilter,\n  selectedQuery,\n  selectedTodo,\n}) => {\n  const filterList = (filterProp: string, todosList: Todo[]) => {\n    switch (filterProp) {\n      case 'all':\n        return todosList.filter(todo => (todo.completed || !todo.completed)\n          && todo.title.includes(selectedQuery.toLowerCase()));\n\n      case 'completed':\n        return todosList.filter(todo => todo.completed\n          && todo.title.includes(selectedQuery.toLowerCase()));\n\n      case 'active':\n        return todosList.filter(todo => !todo.completed\n          && todo.title.includes(selectedQuery.toLowerCase()));\n\n      default:\n        return todosList;\n    }\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {filterList(selectedFilter, todos).map(todo => (\n          <TodoItem\n            todo={todo}\n            selectedTodo={selectedTodo}\n            setSelectedTodo={setSelectedTodo}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\nimport { Filter } from '../../types/Filter';\n\ntype Props = {\n  setSelectedFilter: React.Dispatch<React.SetStateAction<Filter>>;\n  setSelectedQuery: React.Dispatch<React.SetStateAction<string>>;\n  selectedQuery: string;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setSelectedFilter,\n  setSelectedQuery,\n  selectedQuery,\n}) => {\n  const handleFilterChange = (filterValue: string) => {\n    switch (filterValue) {\n      case 'all':\n        setSelectedFilter(Filter.all);\n        break;\n\n      case 'active':\n        setSelectedFilter(Filter.active);\n        break;\n\n      case 'completed':\n        setSelectedFilter(Filter.completed);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={e => handleFilterChange(e.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={selectedQuery}\n          onChange={e => setSelectedQuery(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {selectedQuery && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setSelectedQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect } from 'react';\nimport classNames from 'classnames';\n\nimport { Loader } from '../Loader';\n\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\n\ntype Props = {\n  userInfo: User | null;\n  setUserInfo: React.Dispatch<React.SetStateAction<User | null>>;\n  selectedTodo: Todo | null;\n  setSelectedTodo: React.Dispatch<React.SetStateAction<Todo | null>>;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  userInfo,\n  setUserInfo,\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  useEffect(() => {\n    if (selectedTodo?.userId) {\n      getUser(selectedTodo.userId).then(setUserInfo);\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!userInfo || !selectedTodo ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setSelectedTodo(null);\n                setUserInfo(null);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong\n                className={classNames({\n                  'has-text-danger': !selectedTodo.completed,\n                  'has-text-success': selectedTodo.completed,\n                })}\n              >\n                {selectedTodo.completed\n                  ? 'Done'\n                  : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${userInfo.email}`}>\n                {userInfo.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\n\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\nimport { Filter } from './types/Filter';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[] | []>([]);\n  const [userInfo, setUserInfo] = useState<User | null>(null);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [selectedFilter, setSelectedFilter] = useState<Filter>(Filter.all);\n  const [selectedQuery, setSelectedQuery] = useState('');\n\n  useEffect(() => {\n    getTodos().then(setTodos);\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setSelectedFilter={setSelectedFilter}\n                setSelectedQuery={setSelectedQuery}\n                selectedQuery={selectedQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={todos}\n                    selectedTodo={selectedTodo}\n                    setSelectedTodo={setSelectedTodo}\n                    selectedFilter={selectedFilter}\n                    selectedQuery={selectedQuery}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo?.userId && (\n        <TodoModal\n          userInfo={userInfo}\n          setUserInfo={setUserInfo}\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}